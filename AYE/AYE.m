clear
close all
clc

%% default params

% size of grid
Nrows = 5;
Ncols = 7;

% position of grid
grid_left = 0.03;
grid_bottom = 0.25;
grid_width = 0.95; 
grid_height = 0.55;

% colorcode
highlight_color = [189, 236, 182]/255; % light green
msg_color_fine = [0, 100, 0]/255; % dark green
msg_color_error = [1, 0, 0]; % red

%% data preparation

% to pass to layout generating function
grid.grid_left = grid_left;
grid.grid_bottom = grid_bottom;
grid.grid_width = grid_width;
grid.grid_height = grid_height;


%% figure object

hf = figure('color',[.95, .95, .95],...
    'MenuBar', 'none', ...
    'ToolBar', 'figure', ...
    'NumberTitle', 'off', ...
    'Units', 'normalized', ...
    'Resize', 'off', ...
    'PaperOrientation', 'landscape', ...
    'PaperUnits', 'normalized', ...
    'PaperPosition', [0.00 0.04 .96 .96], ...
    'PaperPositionMode', 'manual', ...
    'Position', [ 0.3536    0.3157    0.2917    0.5889], ...
    'Name', 'AYE (Aids Your indExing)');

toolbar = allchild(hf);
toolbar.Visible = 'off';


%% create layout

% text: title
txt_title = uicontrol(...
    'Parent', hf, ...
    'Style', 'text', ...
    'String', 'AYE (Aids Your indExing)', ...
    'BackgroundColor', [.95, .95, .95], ...
    'FontSize', 20, ...
    'units', 'normalized', ...
    'position', [0.1691    0.8833    0.6756    0.1000]);

% text: size of A
txt_matrix_size = uicontrol(...
    'Parent', hf, ...
    'Style', 'text', ...
    'String', 'size of A: ', ...
    'HorizontalAlignment', 'left', ...
    'BackgroundColor', [.95, .95, .95], ...
    'FontSize', 18, ...
    'units', 'normalized', ...
    'position', [0.2459    0.8004    0.2166    0.1000]);

% edit: number of rows
edit_Nrows = uicontrol(...
    'Parent', hf, ...
    'Style', 'edit', ...
    'String', string(Nrows), ...
    'Tag', 'Nrows', ...
    'BackgroundColor', [1, 1, 1], ...
    'FontSize', 22, ...
    'units', 'normalized', ...
    'position', [0.4500    0.83    0.0964    0.0867], ...
    'Callback', @change_grid_size);

% edit: number of columns
edit_Ncols = uicontrol(...
    'Parent', hf, ...
    'Style', 'edit', ...
    'String', string(Ncols), ...
    'Tag', 'Ncols', ...
    'BackgroundColor', [1, 1, 1], ...
    'FontSize', 22, ...
    'units', 'normalized', ...
    'position', [0.6200    0.83    0.0964    0.0867], ...
    'Callback', @change_grid_size);

% text: x
txt_cross = uicontrol(...
    'Parent', hf, ...
    'Style', 'text', ...
    'String', 'x', ...
    'BackgroundColor', [.95, .95, .95], ...
    'FontSize', 24, ...
    'units', 'normalized', ...
    'position', [0.5600    0.82    0.0454    0.0947]);

% display matrix as grid
display_grid(hf, grid, Nrows, Ncols);

% index: user input
txt_A_index = uicontrol(...
    'Parent', hf, ...
    'Style', 'text', ...
    'String', 'A(                                               )', ...
    'BackgroundColor', [.95, .95, .95], ...
    'FontSize', 22, ...
    'units', 'normalized', ...
    'position', [0.0571    0.12    0.8357    0.0947]);

edit_user_indexing = uicontrol(...
    'Parent', hf, ...
    'Style', 'edit', ...
    'FontSize', 22, ...
    'units', 'normalized', ...
    'position', [0.1714 0.14 0.6429 0.08], ...
    'Callback', @highlight);

txt_error = uicontrol(...
    'Parent', hf, ...
    'Style', 'text', ...
    'String', 'Everything is fine.', ...
    'HorizontalAlignment', 'left', ...
    'ForegroundColor', msg_color_fine, ...
    'BackgroundColor', [.9, .9, .9], ...
    'FontSize', 18, ...
    'units', 'normalized', ...
    'position', [0.0553    0.04    0.8357    0.0547]);

%% function: display matrix as grid

function display_grid(hf, grid, Nrows, Ncols)

grid_width = grid.grid_width;
grid_height = grid.grid_height;
grid_left = grid.grid_left;
grid_bottom = grid.grid_bottom;

cell_width = grid_width/Ncols;
cell_height = grid_height/Nrows;

try
    delete(evalin('base', 'txt'));
catch
end

txt = gobjects(Nrows, Ncols);
for j=1:Ncols
    for i=1:Nrows
        left = grid_left + cell_width*(j-1);
        bottom = grid_bottom + grid_height - cell_height*i;
        txt(i,j) = uicontrol(...
            'Parent', hf, ...
            'Style', 'edit', ...
            'String', string(i) + ',' + string(j), ...
            'Units', 'normalized', ...
            'Position', [left    bottom    cell_width*0.99    cell_height*0.99], ...
            'FontSize', 18);
    end
end
assignin('base', 'txt', txt);

end

%% change number of rows or columns

function change_grid_size(s, ~, ~)

try
    zeros(str2double(s.String), 1);
catch
    display_error('error: invalid matrix size');
    return
end

% change base variables
assignin('base', s.Tag, str2double(s.String));

% change grid size
display_grid(s.Parent, ...
    evalin('base', 'grid'), ...
    evalin('base', 'Nrows'), ...
    evalin('base', 'Ncols'));
display_fine()

end

%% highlight selected cells

function highlight(s, ~, ~)

Nrows = evalin('base', 'Nrows');
Ncols = evalin('base', 'Ncols');
txt = evalin('base', 'txt');

try
    A = zeros(Nrows, Ncols);
    eval("A(" + s.String + ");"); % to check if index is within the range
    eval("A(" + s.String + ") = 1;");
    
    for j=1:Ncols
        for i=1:Nrows
            txt(i,j).BackgroundColor = [.94, .94, .94];
            if A(i,j) == 1                
                txt(i,j).BackgroundColor = evalin('base', 'highlight_color');
            end
        end
    end
    display_fine()
catch ME
    if strcmp(ME.identifier, 'MATLAB:badsubscript')
        msg = 'error: index out of range';
    elseif strcmp(ME.identifier, 'MATLAB:UndefinedFunction')
        msg = 'error: uninterpretable index input';
    else
        msg = 'error: unknown';
    end
    display_error(msg)
end

end

%% display error status

function display_error(msg)

txt_error = evalin('base', 'txt_error');
txt_error.String = msg;
txt_error.ForegroundColor = evalin('base', 'msg_color_error');

end

%% display fine status

function display_fine()

txt_error = evalin('base', 'txt_error');
txt_error.String = 'Everything is fine.';
txt_error.ForegroundColor = evalin('base', 'msg_color_fine');

end